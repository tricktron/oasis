name: Build Rootfs

on:
  push:
    branches: [ main, f-oasis-in-nix-shell ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  FORCE_COLOR: 2

jobs:
  build-initramfs:
    name   : Build Oasis Initramfs
    runs-on: ubuntu-22.04
    steps  :
      - name: Clone repository
        uses: actions/checkout@v3
      
      - name: Setup QEMU rootfs
        run : |
          curl -L -o rootfs.tar https://github.com/tricktron/oasis/releases/download/v1.0.0-alpha/rootfs-x86_64.tar
          curl -L -o etc.tar https://github.com/tricktron/oasis-etc/releases/download/v1.0.0-alpha/etc.tar
          tar -xvf rootfs.tar
          mkdir etc && tar -C etc -xvf etc.tar
          cp -r etc out/root.git

      - name: Setup root & oasis user
        run : |
          sudo chown -R root:root out/root.git
          cd out/root.git && sudo libexec/applyperms
          cd out/root.git && sudo libexec/applyperms -d etc
          mkdir out/root.git/home/oasis
          sudo chown -R 1000:1000 out/root.git/home/oasis
      
      - name: Create initramfs
        run : |
          sudo chmod +r out/root.git/etc/doas.config
          cd out/root.git && find . | cpio --quiet -H newc -o | gzip -9 -n > ../initrd.img

      - name: Upload initramfs artifact
        uses: actions/upload-artifact@v3
        with:
          name: initrd.img
          path: initrd.img
        
  build-kernel:
    name   : Build Oasis QEMU kernel
    if: ${{ false }}  # disable for now
    runs-on: ubuntu-22.04
    steps  :
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install Nix with flakes support
        uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: |
            substituters = https://cache.nixos.org https://tricktron.cachix.org
            trusted-public-keys = tricktron.cachix.org-1:N1aBeQuELyEAOgvizaDC/qqFltwv7N7oSMaNozyDz6w= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
            allowed-users = *
            accept-flake-config = true

      - name: Use Cachix to pull and push binary cache
        uses: cachix/cachix-action@v11
        with:
          name     : tricktron
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      
      - name: Build oasis QEMU kernel
        run : nix build .#oasis-qemu-kernel

      - name: Upload kernel
        run: echo "UPLOAD_PATH=$(readlink -f result)" >> $GITHUB_ENV
      - uses: actions/upload-artifact@v3
        with:
          name: oasis-5_15
          path: ${{ env.UPLOAD_PATH }}

  build-rootfs:
    name: Build Rootfs x86_64
    if: ${{ false }}  # disable for now
    runs-on: ubuntu-22.04
    steps:
      - name: Clone Repository
        uses: actions/checkout@v3

      - name: Install Nix with flakes support
        uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: |
            substituters = https://cache.nixos.org https://tricktron.cachix.org
            trusted-public-keys = tricktron.cachix.org-1:N1aBeQuELyEAOgvizaDC/qqFltwv7N7oSMaNozyDz6w= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
            allowed-users = *
            accept-flake-config = true

      - name: Use Cachix to Pull and Push Binary Cache
        uses: cachix/cachix-action@v11
        with:
          name: tricktron
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          extraPullNames: tricktron

      - name: Cache dev shell
        run: nix develop

      - name: Setup Git user to apply patches and commit
        run: |
          git config --global user.email oasis
          git config --global user.name oasis

      - name: Build
        run: |
          nix develop -c lua setup.lua 
          nix develop -c samu commit
      
      - name: Checkout master to trigger Git hook to get all files
        run: cd out/root.git && git checkout master
      
      - name: Tar rootfs
        run: tar -C out -cvf rootfs-x86_64.tar root.git

      - name: Upload rootfs artifact
        uses: actions/upload-artifact@v3
        with:
          name: rootfs-x86_64
          path: rootfs-x86_64.tar



